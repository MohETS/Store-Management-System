name: LOG430 Lab push and pull request action

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  #This task is in charge of running Clippy which is a Rust crate
  lint_job:
    runs-on: ubuntu-latest
    name: Lint
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Clippy (Rust's linter)
      run: cargo clippy

  #This task is in charge of running the tests
  test_job:
    services:
      postgres:
        image: postgres:14.18
        ports:
          - 5432:5432
    runs-on: ubuntu-latest
    name: Test
    needs: lint_job
    steps:
    - uses: actions/checkout@v4

    - name: Run DB init
      run: psql -h localhost -U ${{ secrets.TEST_DB_USER }} -d ${{ secrets.TEST_DB_NAME }} -f database/scripts/creation_script.sql
      env:
        PGPASSWORD: ${{ secrets.TEST_DB_PASSWORD }}

    - name: Run tests
      env:
        POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
        POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      run: cargo test --verbose

  #This task is in charge of building the Docker image and uploading to Docker Hub if the building was successful
  docker_image_build_job:
    runs-on: ubuntu-latest
    name: Docker image build
    needs: [test_job]
    steps:
    - uses: actions/checkout@v4
    
    - name: Build the Docker image
      run: docker build -t ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_IMAGE}} .
      
    - name: Login to Docker Hub
      if: ${{success()}}
      run: echo ${{secrets.DOCKERHUB_PASSWORD}} | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin
      
    - name: Push image to Docker Hub
      if: ${{success()}}
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_IMAGE}}
